#ifndef NUC_COMMU_H
#define NUC_COMMU_H

#include "struct_typedef.h"
#define SOF1 0xE7
#define SOF2 0x7E

#define NUCINFO_RX_BUF_NUM 42u
#define NUCINFO_FRAME_LENGTH 21u

enum Robot_Colors
{
	COLOR_RED,
	COLOR_BLUE
}; // ????????

enum Task_Types
{
	NUC_SHOOT_ENEMY_CAR,
	NUC_SHOOT_ENEMY_SENTRY,
	NUC_SHOOT_ENEMY_BASE,
	NUC_WINDMILL
};
// ??????????          ?????????            ??????????            ?????¼f???????????
enum Robot_ID
{
	UNKNOWN,
	HERO_1,
	ENGINEER_2,
	STANDARD_3,
	STANDARD_4,
	STANDARD_5,
	GUARD_6,
	SENTRY_7
};

enum Auto_Num
{
	No,
	Yes
};

// typedef struct
//{
//     uint16_t startFlag;             // 0 1 ??????
//     uint16_t taskType;              // 2 3 ?????????????????????????????????
//     fp32 pitch;                     // ????pitch????
//     fp32 yaw;                       // ????yaw????
//     fp32 r;                         // 12 13 14 15 ??????????????,??¦Ë ??
//     uint16_t detectedColor;         //16 17????????????????
//     uint16_t nucSayWeShouldShootNow;    //18 19 NUC??????????uint16_t allowAutoShoot;   ?¦Ï????????????????????????????????????????¡ê???????NUC???????
//                                         //1???????0?????????
//     uint16_t reserved[3];           // 20 21 22 23 24 25????¦Ë???????????????????????????????nuc????
//     uint16_t endFlag;               //26 27 ???????
// } toSTM32_t;

typedef union
{
	fp32 data;
	uint8_t bytes[4];
} RxFP32Data;


typedef struct
{
	RxFP32Data yaw;
	RxFP32Data pitch;
	bool_t is_spin;
	bool_t is_fire;
	bool_t recognized;
	RxFP32Data gimbal_yaw;
	RxFP32Data gimbal_pitch;
	RxFP32Data velocity_x;
	RxFP32Data velocity_y;
} toSTM32_t;

// ???????nuc???????
extern void nuc_control_init(void);

// ???????›¥???nuc????????
extern const toSTM32_t *get_nuc_control_point(void);

// NUC????????????
// added at 2022??1??26??23??54???NUC??§¹??? ???????
void setNUCValid(void);
void setNUCInvalid(void);
uint32_t getNUCLastValidTime_ms(void);
int NUCIsValid(void);
extern void Encode(uint8_t RawData[33], enum Robot_ID self_id, enum Robot_Colors self_color, fp32 pos_x, fp32 pos_y, fp32 gimbal_yaw, fp32 gimbal_pitch, fp32 ballet_speed, enum Auto_Num);
// ????????1??¦Ä???????0.???????????????'S'??????
// int foundArmor(void);

#endif // !NUC_COMMU_H